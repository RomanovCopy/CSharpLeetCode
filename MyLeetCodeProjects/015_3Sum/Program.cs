namespace _015_3Sum
{
    /*
     Учитывая целочисленный массив nums, верните все тройки [nums[i], nums[j], nums[k]], 
    такие что i != j, i != k, и j != k, и nums[i] + nums[j] + nums[k] == 0.

    Обратите внимание, что результирующий набор не должен содержать дубликатов троек.

    Пример 1:

        Input: nums = [-1,0,1,2,-1,-4]
        Output: [[-1,-1,2],[-1,0,1]]
        Пояснение: 
        nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
        nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
        nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
        Уникальные тройки [-1,0,1] и [-1,-1,2].
        Обратите внимание, что порядок вывода и порядок троек не имеет значения.
        Пример 2:

        Input: nums = [0,1,1]
        Output: []
        Пояснение: Единственная возможная тройка не суммируется к 0.
        Пример 3:

        Input: nums = [0,0,0]
        Output: [[0,0,0]]
        Пояснение: Единственная возможная тройка суммируется к 0.

        Ограничения:

        3 <= длина nums <= 3000
        -105 <= nums[i] <= 105
     */

    internal class Program
    {
        static void Main ( string[ ] args )
        {
            new Solution( );
        }
    }
}
